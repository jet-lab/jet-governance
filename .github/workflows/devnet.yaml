name: Devnet Deployment

on:
  push:
    branches: [master]
    paths:
      - "programs/**/*.rs"
      - "programs/**/*.toml"
  workflow_dispatch: {}

env:
  ANCHOR_CLI_VERSION: 0.23.0
  SOLANA_CLI_VERSION: 1.9.2

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cache
        uses: actions/cache@v2
        with:
          key: cache-${{ runner.os }}-a${{ env.ANCHOR_CLI_VERSION }}-s${{ env.SOLANA_CLI_VERSION }}
          path: |
            ~/.cache/solana
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.local/share/solana/

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Solana
        run: sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_CLI_VERSION }}/install)"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Recover Cache
        uses: actions/cache@v2
        with:
          key: cache-${{ runner.os }}-a${{ env.ANCHOR_CLI_VERSION }}-s${{ env.SOLANA_CLI_VERSION }}
          path: |
            ~/.cache/solana
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.local/share/solana/

      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get -y install pkg-config build-essential libudev-dev

      - name: Setup NPM
        uses: actions/setup-node@v2

      - name: Install Anchor CLI
        run: npm i -g @project-serum/anchor-cli@${{ env.ANCHOR_CLI_VERSION }}

      - name: Setup Environment
        run: |
          echo "PATH=$HOME/.local/share/solana/install/active_release/bin:$HOME/.cargo/bin:$PATH" >> $GITHUB_ENV \
          && mkdir -p ~/.config/solana \
          && mkdir -p ./target/deploy \
          && echo ${{ secrets.SOLANA_DEVNET_DEPLOYER_KEYPAIR }} > ~/.config/solana/deployer.json \
          && echo ${{ secrets.REWARDS_DEVNET_KEYPAIR }} > ./target/deploy/jet_rewards-keypair.json \
          && echo ${{ secrets.STAKING_DEVNET_KEYPAIR }} > ./target/deploy/jet_staking-keypair.json \
          && echo ${{ secrets.AUTH_DEVNET_KEYPAIR }} > ./target/deploy/jet_auth-keypair.json

      - name: Build Programs
        run: |
          npm install
          solana-keygen new --no-bip39-passphrase
          cargo fmt -- --check
          cargo clippy -- -D warnings
          cargo test
          anchor build
          anchor test

      - name: Deploy Rewards
        run: |
          anchor deploy --program-name rewards --provider.cluster devnet --provider.wallet ~/.config/solana/deployer.json
          anchor idl upgrade -f ./target/idl/jet_rewards.json JET777rQuPU8BatFbhp6irc1NAbozxTheBqNo25eLQP --provider.cluster devnet --provider.wallet ~/.config/solana/deployer.json

      - name: Deploy Staking
        run: |
          anchor deploy --program-name staking --provider.cluster devnet --provider.wallet ~/.config/solana/deployer.json
          anchor idl upgrade -f ./target/idl/jet_staking.json JPLockxtkngHkaQT5AuRYow3HyUv5qWzmhwsCPd653n --provider.cluster devnet --provider.wallet ~/.config/solana/deployer.json

      - name: Deploy Auth
        run: |
          anchor deploy --program-name auth --provider.cluster devnet --provider.wallet ~/.config/solana/deployer.json
          anchor idl upgrade -f ./target/idl/jet_auth.json JPALXR88jy2fG3miuu4n3o8Jef4K2Cgc3Uypr3Y8RNX --provider.cluster devnet --provider.wallet ~/.config/solana/deployer.json
